services:
  db:
    image: postgres:16
    container_name: selforder-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: webstore-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist 
    command: >
      sh -c "
        sleep 5 &&
        npm run db:generate &&
        npm run db:migrate &&
        npm run db:seed &&
        npm run dev
      "

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: webstore-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development #whateber u use 
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=200
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/build  
    command: npm run dev

volumes:
  pgdata: